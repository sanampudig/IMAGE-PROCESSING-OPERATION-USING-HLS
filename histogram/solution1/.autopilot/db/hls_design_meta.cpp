#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("inStream_TDATA", 8, hls_in, 0, "axis", "in_data", 1),
	Port_Property("inStream_TVALID", 1, hls_in, 6, "axis", "in_vld", 1),
	Port_Property("inStream_TREADY", 1, hls_out, 6, "axis", "in_acc", 1),
	Port_Property("inStream_TKEEP", 1, hls_in, 1, "axis", "in_data", 1),
	Port_Property("inStream_TSTRB", 1, hls_in, 2, "axis", "in_data", 1),
	Port_Property("inStream_TUSER", 2, hls_in, 3, "axis", "in_data", 1),
	Port_Property("inStream_TLAST", 1, hls_in, 4, "axis", "in_data", 1),
	Port_Property("inStream_TID", 5, hls_in, 5, "axis", "in_data", 1),
	Port_Property("inStream_TDEST", 6, hls_in, 6, "axis", "in_data", 1),
	Port_Property("histo_Addr_A", 32, hls_out, 7, "bram", "MemPortADDR2", 1),
	Port_Property("histo_EN_A", 1, hls_out, 7, "bram", "MemPortCE2", 1),
	Port_Property("histo_WEN_A", 4, hls_out, 7, "bram", "MemPortWE2", 1),
	Port_Property("histo_Din_A", 32, hls_out, 7, "bram", "MemPortDIN2", 1),
	Port_Property("histo_Dout_A", 32, hls_in, 7, "bram", "MemPortDOUT2", 1),
	Port_Property("histo_Clk_A", 1, hls_out, 7, "bram", "mem_clk", 1),
	Port_Property("histo_Rst_A", 1, hls_out, 7, "bram", "mem_rst", 1),
	Port_Property("s_axi_CTRL_BUS_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_BUS_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_BUS_AWADDR", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_BUS_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_BUS_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_BUS_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_BUS_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_BUS_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_BUS_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_BUS_ARADDR", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_BUS_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_BUS_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_BUS_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_BUS_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_BUS_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_BUS_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_BUS_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "doHist";
